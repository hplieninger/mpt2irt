# 1,...j,...,J: number of items
# 1,...i,...,N: number of participants
# S: number of parameters (4: middle/extremity/acquiescence/trait)
# X: N(person) x J(item) array of observed responses
# revItem: logical vector of length J indicating reversed items (2...-2 instead of -2...2)

#### Hyperpriors
# df: degrees of freedom for scaled inverse wishart (>=S, typically df=S+1)
# V: S x S hyperprior for wishart

model{

# individuals:
for(i in 1:N){
  # ARS, then participant extremness (but constant across items)
  extr_a[i] <- phi(theta[i,2] - beta_ARS_extreme)
  # items
	for(j in 1:J){
		################################ Response styles ##########################
			# multinomial distribution for observed frequencies
			# assumption: one response per person/item
			X[i,j] ~dcat(p[i,j,1:5])
			pred[i,j] ~ dcat(p[i,j,1:5])

# 			  ### posterior predictive
# 			  dev.obs[i,j] <- ((p[i,j, X[i,j]]-1) / p[i,j, X[i,j]])^2
# 			  dev.pred[i,j] <- ((p[i,j, pred[i,j]]-1) / p[i,j, pred[i,j]])^2

			# response probabilities: MPT model from -2, -1, 0, 1, 2 // 0,1,2,3,4
			p[i,j,1] <- (1-acq[i,j])*(1-mid[i,j])*(1-trait[i,j])*extr[i,j]
			p[i,j,2] <- (1-acq[i,j])*(1-mid[i,j])*(1-trait[i,j])*(1-extr[i,j])
			p[i,j,3] <- (1-acq[i,j])*mid[i,j]
			p[i,j,4] <- (1-acq[i,j])*(1-mid[i,j])*trait[i,j]*(1-extr[i,j]) +acq[i,j]*(1-extr_a[i])
			p[i,j,5] <- (1-acq[i,j])*(1-mid[i,j])*trait[i,j]*extr[i,j]     +acq[i,j]*extr_a[i]

			# probit link to continuous latent scale
			mid[i,j] <- phi(latent[i,j,1])
			extr[i,j] <- phi(latent[i,j,2])
			acq[i,j] <- phi(latent[i,j,3])  
			trait[i,j] <- phi(latent[i,j,4])
			
			# decompose to person ability and item difficulty
			for(s in 1:3){
				latent[i,j,s] <- theta[i,s] - beta[j,s]
			}
			### reversed items: only relevant for trait-dimension/response process
			# only a single trait property beta for each item!
			latent[i,j,4] <- (-1)^revItem[j] * (theta[i,3+traitItem[j]]-beta[j,4]) 
		}
	
	######### Hierarchical model for participant parameters ####################
	for(s in 1:S){
		theta[i,s] <- xi_theta[s]*theta.raw[i,s]
	}
	theta.raw[i,1:S] ~ dmnorm(theta_mu, Tau.theta.raw[,])  # fix person mean to zero!
}

# # posterior predictive
# T_obs <- sum(dev.obs)
# T_pred <- sum(dev.pred) 
# post_p <- T_pred > T_obs


### independent normal priors for item parameters
for(j in 1:J){
	## Response styles: MRS and ERS and ARS
	for(s in 1:3){
		beta_raw[j,s] ~ dnorm(0, tau_beta_raw[s]) T(-5,5) # independent univariate normal 	
		## beta[j,s] <- mu_beta[s] + xi_beta[s] * beta_raw[j,s]
		beta[j,s] <- mu_beta[s] + beta_raw[j,s]
	}
	## Trait(s):
	beta_raw[j,4] ~ dnorm(0, tau_beta_raw[3+traitItem[j]]) T(-5,5)
	beta[j,4] <- mu_beta[3+traitItem[j]] + beta_raw[j,4]
}

# item hyperpriors
beta_ARS_extreme ~ dnorm(0,1) T(-5,5)
for(s in 1:S){
	# xi_beta[s] ~ dunif(0,100)  # scale
	mu_beta[s] ~ dnorm(0, 1) T(-5,5)  # raw item mean
	tau_beta_raw[s] ~ dgamma(1,1)   # raw item variance
	# mu_beta[s] <- xi_beta[s]*mu_beta_raw[s]   # rescaled item mean 
	sigma_beta[s] <- 1/sqrt(tau_beta_raw[s])  # rescaled item SD
}

############### scaled inverse wishart for participants ####################

Tau.theta.raw[1:S,1:S] ~ dwish(V, df)
Sigma.Theta.raw[1:S,1:S] <- inverse(Tau.theta.raw[,])

for(s in 1:S){
	xi_theta[s] ~ dnorm (1, .01)
  for(t in 1:S){
    Sigma[s,t] <- xi_theta[s]*xi_theta[t]*Sigma.Theta.raw[s,t]
  }
}

#modules# glm on, dic on
}
