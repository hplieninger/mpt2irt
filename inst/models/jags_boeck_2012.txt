# 1,...j,...,J: number of items
# 1,...i,...,N: number of participants
# S: number of parameters (two for middle/extremity + five or so for traits)
# X: N(person) x J(item)  array of observed responses
# traitItem: vector of length J indicating traits (e.g., numbered 1...5 for big5)

#### Hyperpriors
# df: degrees of freedom for scaled inverse wishart (>=S, typically df=S+1)
# V: S x S hyperprior for wishart

model{

# individuals:
for(i in 1:N){
	# items
	for(j in 1:J){
		################################ Response styles ##########################
			# multinomial distribution for observed frequencies
			# assumption: one response per person/item
			X[i,j] ~ dcat(p[i,j,1:5])
			pred[i,j] ~ dcat(p[i,j,1:5])

#			  ### posterior predictive
#			  dev.obs[i,j] <- ((p[i,j, X[i,j]]-1) / p[i,j, X[i,j]])^2
#			  dev.pred[i,j] <- ((p[i,j, pred[i,j]]-1) / p[i,j, pred[i,j]])^2

			
			# response probabilities: MPT model from -2, -1, 0, 1, 2
			p[i,j,1] <- (1-middle[i,j])*(1-trait[i,j])*extreme[i,j]
			p[i,j,2] <- (1-middle[i,j])*(1-trait[i,j])*(1-extreme[i,j])
			p[i,j,3] <- middle[i,j]
			p[i,j,4] <- (1-middle[i,j])*trait[i,j]*(1-extreme[i,j])
			p[i,j,5] <- (1-middle[i,j])*trait[i,j]*extreme[i,j]
			
			
			# probit link to continuous latent scale
			middle[i,j] <- phi(latent[i,j,1])
			extreme[i,j] <- phi(latent[i,j,2])
			trait[i,j] <- phi(latent[i,j,3])
			
			# decompose to person ability and item difficulty
			for(s in 1:2){
				latent[i,j,s] <- theta[i,s] - beta[j,s]
			}
			### reversed items: only relevant for trait-dimension/response process
			# only a single trait property beta for each item!
			latent[i,j,3] <- (-1)^revItem[j] * (theta[i,2+traitItem[j]]-beta[j,3]) 
		}
	
	######### Hierarchical model for participant parameters ####################
	for(s in 1:S){
		theta[i,s] <- xi_theta[s]*theta.raw[i,s]
	}
	theta.raw[i,1:S] ~ dmnorm(theta_mu, Tau.theta.raw)  # fix person mean to zero!
}

# # posterior predictive
# T_obs <- sum(dev.obs)
# T_pred <- sum(dev.pred) 
# post_p <- T_pred > T_obs

### independent normal priors for item parameters
for(j in 1:J){
	## Response styles: MRS and ERS
	for(s in 1:2){
		# beta_raw[j,s] ~ dnorm(mu_beta_raw[s], tau_beta_raw[s]) T(-5,5) # independent univariate normal 
		# beta[j,s] <- xi_beta[s] * beta_raw[j,s]
		beta_raw[j,s] ~ dnorm(0, tau_beta_raw[s]) T(-5,5) # independent univariate normal 	
		beta[j,s] <- mu_beta[s] + beta_raw[j,s]
	}
	## Trait(s):
	# beta_raw[j,3] ~ dnorm(mu_beta_raw[2+traitItem[j]], tau_beta_raw[2+traitItem[j]])
	# beta[j,3] <- xi_beta[2+traitItem[j]] * beta_raw[j,3]
	beta_raw[j,3] ~ dnorm(0, tau_beta_raw[2+traitItem[j]]) T(-5,5)
	beta[j,3] <- mu_beta[2+traitItem[j]] +  beta_raw[j,3]
}

# item hyperpriors
for(s in 1:S){
	# xi_beta[s] ~ dunif(0,100)  # scale
	mu_beta[s] ~ dnorm(0, 1) T(-5,5)  # raw item mean
	tau_beta_raw[s] ~ dgamma(1,1)   # raw item variance
	# mu_beta[s] <- xi_beta[s]*mu_beta_raw[s]   # rescaled item mean 
	sigma_beta[s] <- 1/sqrt(tau_beta_raw[s])  # rescaled item SD
}

############### scaled inverse wishart for participants ####################

Tau.theta.raw[1:S,1:S] ~ dwish(V, df)
Sigma.Theta.raw[1:S,1:S] <- inverse(Tau.theta.raw[,])

for(s in 1:S){
	xi_theta[s] ~ dunif (0, 100)
  for(t in 1:S){
        Sigma[s,t] <- xi_theta[s]*xi_theta[t]*Sigma.Theta.raw[s,t]
  }
}

#modules# glm on, dic on
}

