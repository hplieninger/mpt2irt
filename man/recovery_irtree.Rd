% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation.R
\name{recovery_irtree}
\alias{recovery_irtree}
\title{Recovery Simulation for Response Styles}
\usage{
recovery_irtree(rrr, N, J, prop.rev = 0.5, genModel, fitModel, fitMethod,
  theta.vcov, betas = NULL, beta_ARS_extreme = NULL, df = NULL,
  V = NULL, M = 500, n.chains = 3, thin = 1, warmup = 500,
  method = "simple", outFormat = NULL, startSmall = FALSE, df_vcov = 50,
  dir = NULL, keep_mcmc = FALSE, savext_mcmc = FALSE,
  add2varlist = c("deviance", "pd", "popt", "dic"), ...)
}
\arguments{
\item{rrr}{Integer. Either a single value handed over by a other function or a sequence (e.g., \code{1:100})}

\item{N}{sample size}

\item{J}{number of items. Can be a vector for multiple traits (e.g.,
J=c(10,10,10)).}

\item{prop.rev}{number of reversed items. Can be a vector for multiple
traits(e.g., prop.rev=c(5,3,5)/10)}

\item{genModel}{Character. The data generating model (either "2012" or "ext").}

\item{fitModel}{Character. The model for data analysis ("2012", "ext", or both as vector
c("2012", "ext")).}

\item{fitMethod}{Character. Whether to use "stan" or "jags".}

\item{theta.vcov}{true covariance matrix of response processes (order:
middle, extreme, (acquiescence), trait). standard is diag(3) / diag(4). Can be a vector of variances (not SDs).}

\item{betas}{Optional list. May have entries \code{"beta.mrs"},
\code{"beta.ers"}, \code{"beta.trait"}, and/or \code{"beta.ars"}. Each of
those may have arguments passed to \code{\link[truncnorm]{rtruncnorm}}.}

\item{df}{degrees of freedom for wishart hyperprior on trait covariance
matrix. standard ist the number of trait parameters plus one. should be a
vector of length two if two models are fitted.}

\item{V}{prior matrix for theta covariance. standard is diag(S). if two
models are fitted, should be a list with two matrices of the correct size}

\item{M}{number of MCMC samples (after warmup)}

\item{n.chains}{number of MCMC chains (and number of CPUs used)}

\item{thin}{thinning of MCMC samples}

\item{warmup}{number of samples for warmup (in JAGS: 3/4 for adaption, 1/4
for burnin)}

\item{outFormat}{either "mcmc.list" (can be analyzed with coda package) or
"stan" or "runjags"}

\item{startSmall}{Whether to use random starting values for
beta sampled from "wide" (startSmall=F, generated within JAGS) or "narrow"
priors (startSmall=T; beta and theta closer to 0; might solve problems with
slow convergence of some chains for extreme starting values).}

\item{df_vcov}{Numeric. Degrees of freedom for wishart distribution from
which the variance-covariance matrix for generating the data is drawn.
Defaults to 10.}

\item{add2varlist}{Additional variables to monitor (e.g., \code{c("deviance",
"pd", "popt", "dic")} for JAGS)}

\item{...}{further arguments passed to \code{\link[rstan]{sampling}} (for Stan) or \code{\link[runjags]{run.jags}} (for JAGS)
working directory ("_Stanprogress.txt")}

\item{nCPU}{number of CPUs for parallel run of MCMC sampler}

\item{path}{where to save progress report (e.g., path="C:/"). disabled by using path=""}

\item{saveTemp}{save temporary results to same location as progress report}
}
\value{
a list of class "boeck.recov" containing true and estimated parameters
}
\description{
Repeatedly generates and fits data and returns a list of the true and fitted estimates. At the moment, only unidimensional traits are supported (i.e., no response scales like the Big 5)
}
\examples{
\dontrun{
 sim <- recovery_irtree(N=30, J=6, R=2, genModel="2012", fitModel=c("2012","ext"), 
                   fitMethod="jags", nCPU=4, RSmin=0, RSmax=1, prop.rev=.5)
 summary(sim, whichFit=1, plot=T)
 sim$dic
}
}

