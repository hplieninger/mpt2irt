% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots2.R
\name{plot_expected}
\alias{plot_expected}
\title{Plot predicted and observed frequencies.}
\usage{
plot_expected(fit_sum, X = NULL, revItem = NULL, traitItem = NULL,
  points = 5, type = "b", col = "cyan", lwd = 2, ylim = NULL,
  measure = c("Median", "Mean"), ...)
}
\arguments{
\item{fit_sum}{List. A summary of theta and beta parameters as returned from \code{\link{tidyup_irtree_fit}}.}

\item{X}{an N x J matrix of observed responses for categories 1...5 (use
\code{\link{mult_to_cat}} to transform a multinomial frequency matrix with 1s/0s to
responses from 1...5)}

\item{revItem}{vector of length J specifying reversed items (1=reversed,
0=not reversed)}

\item{traitItem}{vector of length J specifying the underlying traits (e.g.,
indexed from 1...5). Standard: only a single trait is measured by all
items. If the Big5 are measures, might be something like
c(1,1,1,2,2,2,...,5,5,5,5)}

\item{type}{1-character string giving the type of plot desired.  The
    following values are possible, for details, see \code{\link{plot}}:
    \code{"p"} for points, \code{"l"} for lines,
    \code{"b"} for both points and lines,
    \code{"c"} for empty points joined by lines,
    \code{"o"} for overplotted points and lines,
    \code{"s"} and \code{"S"} for stair steps and
    \code{"h"} for histogram-like vertical lines.  Finally,
    \code{"n"} does not produce any points or lines.}

\item{col}{Color of the prediction line.}

\item{ylim}{the y limits of the plot.}

\item{...}{Additional arguments passed to \code{\link[graphics]{lines}}.}
}
\description{
Plot histograms of observed response frequencies separately for each item (via \code{\link{plot_responses}}), and adds the predictions from \code{\link{boeck_predict}}.
}
\examples{
\dontrun{
# generate data
N <- 20
J <- 10
betas <- cbind(rnorm(J, .5), rnorm(J, .5), rnorm(J, 1.5), rnorm(J, 0))
dat <- generate_irtree_ext(N = N, J = J, betas = betas, beta_ARS_extreme = .5)

# fit model
res1 <- fit_irtree(dat$X, revItem = dat$revItem, M = 200, warmup = 200)
res2 <- summarize_irtree_fit(res1)
res3 <- tidyup_irtree_fit(res2, N = N, J = J, revItem = dat$revItem,
                          traitItem = dat$traitItem, fitModel = res1$fitModel)

# plot expected and observed frequencies
plot_expected(res3, X = dat$X)
}
}

