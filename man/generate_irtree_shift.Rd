% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_data.R
\name{generate_irtree_shift}
\alias{generate_irtree_shift}
\title{Generate data for Shift-Tree Model.}
\usage{
generate_irtree_shift(N = NULL, J = NULL, betas = NULL,
  traitItem = rep(1, J), theta_vcov = NULL, prop.rev = 0.5,
  revItem = NULL, genModel = "shift", cat = TRUE, theta = NULL)
}
\arguments{
\item{N}{number of persons}

\item{J}{number of items}

\item{betas}{Jx3 matrix with item parameters on three response dimensions
(middle, extreme, and relevant trait defined by \code{traitItem}).}

\item{traitItem}{vector of length J specifying the underlying traits (e.g.,
indexed from 1...5). Standard: only a single trait is measured by all
items. If the Big5 are measured, might be something like
c(1,1,1,2,2,2,...,5,5,5,5)}

\item{theta_vcov}{4x4 covariance matrix for middle, extremity, acquiescence,
trait(s) (can be a vector of length 4 with variances for uncorrelated
processes).}

\item{prop.rev}{proportion of reversed items (rounded to next integer). Can
be a vector if multiple traits are specified by \code{traitItem}. Only used
if \code{revItem = NULL}.}

\item{revItem}{vector of length J specifying reversed items (1=reversed,
0=regular). Overrides argument \code{prop.rev}.}

\item{genModel}{Character. Either \code{"2012"} (Boeckenholt Model without
acquiescence) or \code{"ext"} (Acquiescence Model)}

\item{cat}{whether to return categorical data (response categories 1...5) or
multinomial data (frequencies of 0 and 1)}

\item{theta}{Numeric. Optional matrix with \code{N} rows containing the true
person parameters theta.}
}
\value{
The function returns a list containing the generated matrix of
  responses X, the true parameters, as well as further specifications such as
  \code{traitItem} or \code{revItem}.
}
\description{
Function generates categorical data 1...5 for \code{N} persons
  and \code{J} items given the item parameters \code{betas}.
}
\examples{
N <- 20
J <- 10
betas <- cbind(rnorm(J, .5), rnorm(J, .5), rnorm(J, 0))
dat <- generate_irtree_shift(N = N, J = J, betas = betas)
}
